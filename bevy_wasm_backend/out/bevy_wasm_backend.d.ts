/* tslint:disable */
/* eslint-disable */
export function start(): void;

export type InitInput = RequestInfo | URL | Response | BufferSource | WebAssembly.Module;

export interface InitOutput {
  readonly memory: WebAssembly.Memory;
  readonly start: () => void;
  readonly spAtlas_create: (a: number, b: number, c: number, d: number) => number;
  readonly isspace_: (a: number) => number;
  readonly spPropertyIdArray_create: (a: number) => number;
  readonly spPropertyIdArray_setSize: (a: number, b: number) => number;
  readonly spPropertyIdArray_ensureCapacity: (a: number, b: number) => void;
  readonly spPropertyIdArray_add: (a: number, b: bigint) => void;
  readonly spPropertyIdArray_addAll: (a: number, b: number) => void;
  readonly spPropertyIdArray_addAllValues: (a: number, b: number, c: number, d: number) => void;
  readonly spPropertyIdArray_removeAt: (a: number, b: number) => void;
  readonly spPropertyIdArray_contains: (a: number, b: bigint) => number;
  readonly spPropertyIdArray_pop: (a: number) => bigint;
  readonly spPropertyIdArray_peek: (a: number) => bigint;
  readonly spTimelineArray_create: (a: number) => number;
  readonly spAnimation_create: (a: number, b: number, c: number) => number;
  readonly spAnimation_dispose: (a: number) => void;
  readonly spTimeline_dispose: (a: number) => void;
  readonly spAnimation_hasTimeline: (a: number, b: number, c: number) => number;
  readonly spAnimation_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number) => void;
  readonly _spTimeline_init: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly spTimeline_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly spTimeline_setBezier: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number) => void;
  readonly spTimeline_getDuration: (a: number) => number;
  readonly _spCurveTimeline_init: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number) => void;
  readonly _spCurveTimeline_dispose: (a: number) => void;
  readonly _spCurveTimeline_setBezier: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number) => void;
  readonly _spCurveTimeline_getBezierValue: (a: number, b: number, c: number, d: number, e: number) => number;
  readonly spCurveTimeline_setLinear: (a: number, b: number) => void;
  readonly spCurveTimeline_setStepped: (a: number, b: number) => void;
  readonly spCurveTimeline1_getCurveValue: (a: number, b: number) => number;
  readonly spCurveTimeline1_getRelativeValue: (a: number, b: number, c: number, d: number, e: number, f: number) => number;
  readonly spCurveTimeline1_getAbsoluteValue: (a: number, b: number, c: number, d: number, e: number, f: number) => number;
  readonly spCurveTimeline1_getAbsoluteValue2: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => number;
  readonly spCurveTimeline1_getScaleValue: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => number;
  readonly spCurveTimeline2_setFrame: (a: number, b: number, c: number, d: number, e: number) => void;
  readonly _spRotateTimeline_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly spRotateTimeline_create: (a: number, b: number, c: number) => number;
  readonly _spTranslateTimeline_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly spTranslateTimeline_create: (a: number, b: number, c: number) => number;
  readonly _spTranslateXTimeline_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly spTranslateXTimeline_create: (a: number, b: number, c: number) => number;
  readonly _spTranslateYTimeline_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly spTranslateYTimeline_create: (a: number, b: number, c: number) => number;
  readonly _spScaleTimeline_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly spScaleTimeline_create: (a: number, b: number, c: number) => number;
  readonly _spScaleXTimeline_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly spScaleXTimeline_create: (a: number, b: number, c: number) => number;
  readonly _spScaleYTimeline_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly spScaleYTimeline_create: (a: number, b: number, c: number) => number;
  readonly _spShearTimeline_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly spShearTimeline_create: (a: number, b: number, c: number) => number;
  readonly _spShearXTimeline_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly spShearXTimeline_create: (a: number, b: number, c: number) => number;
  readonly _spShearYTimeline_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly spShearYTimeline_create: (a: number, b: number, c: number) => number;
  readonly _spRGBATimeline_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly spRGBATimeline_create: (a: number, b: number, c: number) => number;
  readonly spRGBATimeline_setFrame: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => void;
  readonly _spRGBTimeline_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly spRGBTimeline_create: (a: number, b: number, c: number) => number;
  readonly _spAlphaTimeline_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly spAlphaTimeline_create: (a: number, b: number, c: number) => number;
  readonly spAlphaTimeline_setFrame: (a: number, b: number, c: number, d: number) => void;
  readonly _spRGBA2Timeline_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly spRGBA2Timeline_create: (a: number, b: number, c: number) => number;
  readonly spRGBA2Timeline_setFrame: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number) => void;
  readonly _spRGB2Timeline_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly spRGB2Timeline_create: (a: number, b: number, c: number) => number;
  readonly spRGB2Timeline_setFrame: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly _spAttachmentTimeline_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly _spAttachmentTimeline_dispose: (a: number) => void;
  readonly spAttachmentTimeline_create: (a: number, b: number) => number;
  readonly spAttachmentTimeline_setFrame: (a: number, b: number, c: number, d: number) => void;
  readonly _spDeformTimeline_setBezier: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number) => void;
  readonly _spDeformTimeline_getCurvePercent: (a: number, b: number, c: number) => number;
  readonly _spDeformTimeline_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly _spDeformTimeline_dispose: (a: number) => void;
  readonly spDeformTimeline_create: (a: number, b: number, c: number, d: number, e: number) => number;
  readonly spDeformTimeline_setFrame: (a: number, b: number, c: number, d: number) => void;
  readonly _spSequenceTimeline_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly spSequenceTimeline_create: (a: number, b: number, c: number) => number;
  readonly _spInheritTimeline_dispose: (a: number) => void;
  readonly spSequenceTimeline_setFrame: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
  readonly _spEventTimeline_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly _spEventTimeline_dispose: (a: number) => void;
  readonly spEventTimeline_create: (a: number) => number;
  readonly spEventTimeline_setFrame: (a: number, b: number, c: number) => void;
  readonly _spDrawOrderTimeline_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly _spDrawOrderTimeline_dispose: (a: number) => void;
  readonly spDrawOrderTimeline_create: (a: number, b: number) => number;
  readonly spDrawOrderTimeline_setFrame: (a: number, b: number, c: number, d: number) => void;
  readonly _spInheritTimeline_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly spInheritTimeline_create: (a: number, b: number) => number;
  readonly spInheritTimeline_setFrame: (a: number, b: number, c: number, d: number) => void;
  readonly _spIkConstraintTimeline_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly spIkConstraintTimeline_create: (a: number, b: number, c: number) => number;
  readonly spIkConstraintTimeline_setFrame: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => void;
  readonly _spTransformConstraintTimeline_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly spTransformConstraintTimeline_create: (a: number, b: number, c: number) => number;
  readonly spTransformConstraintTimeline_setFrame: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly _spPathConstraintPositionTimeline_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly spPathConstraintPositionTimeline_create: (a: number, b: number, c: number) => number;
  readonly _spPathConstraintSpacingTimeline_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly spPathConstraintSpacingTimeline_create: (a: number, b: number, c: number) => number;
  readonly _spPathConstraintMixTimeline_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly spPathConstraintMixTimeline_create: (a: number, b: number, c: number) => number;
  readonly spPathConstraintMixTimeline_setFrame: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
  readonly _spPhysicsConstraintTimeline_global: (a: number, b: number) => number;
  readonly _spPhysicsConstraintTimeline_set: (a: number, b: number, c: number) => void;
  readonly _spPhysicsConstraintTimeline_get: (a: number, b: number) => number;
  readonly _spPhysicsConstraintTimeline_setup: (a: number, b: number) => number;
  readonly _spPhysicsConstraintTimeline_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly spPhysicsConstraintTimeline_create: (a: number, b: number, c: number, d: number) => number;
  readonly _spPhysicsConstraintResetTimeline_apply: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly spPhysicsConstraintResetTimeline_create: (a: number, b: number) => number;
  readonly spPhysicsConstraintResetTimeline_setFrame: (a: number, b: number, c: number) => void;
  readonly spTrackEntryArray_create: (a: number) => number;
  readonly spAnimationState_disposeStatics: () => void;
  readonly _spEventQueue_create: (a: number) => number;
  readonly _spEventQueue_free: (a: number) => void;
  readonly _spEventQueue_ensureCapacity: (a: number, b: number) => void;
  readonly _spEventQueue_addEntry: (a: number, b: number) => void;
  readonly _spEventQueue_start: (a: number, b: number) => void;
  readonly _spEventQueue_interrupt: (a: number, b: number) => void;
  readonly _spEventQueue_end: (a: number, b: number) => void;
  readonly _spEventQueue_dispose: (a: number, b: number) => void;
  readonly _spEventQueue_complete: (a: number, b: number) => void;
  readonly _spEventQueue_event: (a: number, b: number, c: number) => void;
  readonly _spEventQueue_clear: (a: number) => void;
  readonly _spEventQueue_drain: (a: number) => void;
  readonly _spAnimationState_disposeTrackEntry: (a: number) => void;
  readonly _spAnimationState_enableQueue: (a: number) => void;
  readonly _spAnimationState_disableQueue: (a: number) => void;
  readonly _spAnimationState_disposeTrackEntries: (a: number, b: number) => void;
  readonly spAnimationState_create: (a: number) => number;
  readonly spAnimationState_dispose: (a: number) => void;
  readonly spAnimationState_update: (a: number, b: number) => void;
  readonly _spAnimationState_updateMixingFrom: (a: number, b: number, c: number) => number;
  readonly _spAnimationState_setCurrent: (a: number, b: number, c: number, d: number) => void;
  readonly spAnimationState_apply: (a: number, b: number) => number;
  readonly _spTrackEntry_computeHold: (a: number, b: number) => void;
  readonly _spAnimationState_applyMixingFrom: (a: number, b: number, c: number, d: number) => number;
  readonly _spAnimationState_applyAttachmentTimeline: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
  readonly _spAnimationState_applyRotateTimeline: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly _spAnimationState_queueEvents: (a: number, b: number, c: number) => void;
  readonly spAnimationState_clearTracks: (a: number) => void;
  readonly spAnimationState_clearTrack: (a: number, b: number) => void;
  readonly _spAnimationState_expandToIndex: (a: number, b: number) => number;
  readonly spAnimationState_setAnimationByName: (a: number, b: number, c: number, d: number) => number;
  readonly spAnimationState_setAnimation: (a: number, b: number, c: number, d: number) => number;
  readonly _spAnimationState_trackEntry: (a: number, b: number, c: number, d: number, e: number) => number;
  readonly spAnimationState_addAnimationByName: (a: number, b: number, c: number, d: number, e: number) => number;
  readonly spAnimationState_addAnimation: (a: number, b: number, c: number, d: number, e: number) => number;
  readonly spAnimationState_setEmptyAnimation: (a: number, b: number, c: number) => number;
  readonly spAnimationState_addEmptyAnimation: (a: number, b: number, c: number, d: number) => number;
  readonly spAnimationState_setEmptyAnimations: (a: number, b: number) => void;
  readonly spAnimationState_clearNext: (a: number, b: number) => void;
  readonly _spAnimationState_animationsChanged: (a: number) => void;
  readonly _spAnimationState_resizeTimelinesRotation: (a: number, b: number) => number;
  readonly _spAnimationState_ensureCapacityPropertyIDs: (a: number, b: number) => void;
  readonly _spAnimationState_addPropertyID: (a: number, b: bigint) => number;
  readonly _spAnimationState_addPropertyIDs: (a: number, b: number, c: number) => number;
  readonly spAnimationState_getCurrent: (a: number, b: number) => number;
  readonly spAnimationState_clearListenerNotifications: (a: number) => void;
  readonly spTrackEntry_getAnimationTime: (a: number) => number;
  readonly spTrackEntry_resetRotationDirections: (a: number) => void;
  readonly spTrackEntry_getTrackComplete: (a: number) => number;
  readonly spTrackEntry_setMixDuration: (a: number, b: number, c: number) => void;
  readonly spTrackEntry_wasApplied: (a: number) => number;
  readonly _ToEntry_create: (a: number, b: number) => number;
  readonly _FromEntry_create: (a: number) => number;
  readonly _FromEntry_dispose: (a: number) => void;
  readonly spAnimationStateData_create: (a: number) => number;
  readonly spAnimationStateData_dispose: (a: number) => void;
  readonly spAnimationStateData_setMixByName: (a: number, b: number, c: number, d: number) => void;
  readonly spAnimationStateData_setMix: (a: number, b: number, c: number, d: number) => void;
  readonly spAnimationStateData_getMix: (a: number, b: number, c: number) => number;
  readonly spFloatArray_create: (a: number) => number;
  readonly spFloatArray_add: (a: number, b: number) => void;
  readonly spFloatArray_addAll: (a: number, b: number) => void;
  readonly spFloatArray_addAllValues: (a: number, b: number, c: number, d: number) => void;
  readonly spFloatArray_removeAt: (a: number, b: number) => void;
  readonly spFloatArray_contains: (a: number, b: number) => number;
  readonly spFloatArray_pop: (a: number) => number;
  readonly spFloatArray_peek: (a: number) => number;
  readonly spIntArray_create: (a: number) => number;
  readonly spIntArray_contains: (a: number, b: number) => number;
  readonly spShortArray_create: (a: number) => number;
  readonly spShortArray_setSize: (a: number, b: number) => number;
  readonly spShortArray_ensureCapacity: (a: number, b: number) => void;
  readonly spShortArray_add: (a: number, b: number) => void;
  readonly spShortArray_addAll: (a: number, b: number) => void;
  readonly spShortArray_addAllValues: (a: number, b: number, c: number, d: number) => void;
  readonly spShortArray_removeAt: (a: number, b: number) => void;
  readonly spShortArray_contains: (a: number, b: number) => number;
  readonly spShortArray_pop: (a: number) => number;
  readonly spShortArray_peek: (a: number) => number;
  readonly spUnsignedShortArray_create: (a: number) => number;
  readonly spUnsignedShortArray_add: (a: number, b: number) => void;
  readonly spUnsignedShortArray_contains: (a: number, b: number) => number;
  readonly spUnsignedShortArray_pop: (a: number) => number;
  readonly spUnsignedShortArray_peek: (a: number) => number;
  readonly spArrayFloatArray_create: (a: number) => number;
  readonly spArrayFloatArray_dispose: (a: number) => void;
  readonly spArrayFloatArray_clear: (a: number) => void;
  readonly spArrayFloatArray_setSize: (a: number, b: number) => number;
  readonly spArrayFloatArray_ensureCapacity: (a: number, b: number) => void;
  readonly spArrayFloatArray_add: (a: number, b: number) => void;
  readonly spArrayFloatArray_addAll: (a: number, b: number) => void;
  readonly spArrayFloatArray_addAllValues: (a: number, b: number, c: number, d: number) => void;
  readonly spArrayFloatArray_removeAt: (a: number, b: number) => void;
  readonly spArrayFloatArray_contains: (a: number, b: number) => number;
  readonly spArrayFloatArray_pop: (a: number) => number;
  readonly spArrayFloatArray_peek: (a: number) => number;
  readonly spArrayShortArray_create: (a: number) => number;
  readonly spKeyValueArray_create: (a: number) => number;
  readonly spKeyValueArray_setSize: (a: number, b: number) => number;
  readonly spKeyValueArray_ensureCapacity: (a: number, b: number) => void;
  readonly spKeyValueArray_add: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => void;
  readonly spKeyValueArray_addAll: (a: number, b: number) => void;
  readonly spKeyValueArray_addAllValues: (a: number, b: number, c: number, d: number) => void;
  readonly spKeyValueArray_contains: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => number;
  readonly spKeyValueArray_pop: (a: number, b: number) => void;
  readonly spKeyValueArray_peek: (a: number, b: number) => void;
  readonly spAtlasPage_create: (a: number, b: number) => number;
  readonly spAtlasPage_dispose: (a: number) => void;
  readonly spAtlasRegion_create: () => number;
  readonly spAtlasRegion_dispose: (a: number) => void;
  readonly indexOf: (a: number, b: number, c: number) => number;
  readonly spine_memmove: (a: number, b: number, c: bigint) => number;
  readonly spine_memcpy: (a: number, b: number, c: bigint) => number;
  readonly _spAtlasPage_disposeTexture: (a: number) => void;
  readonly spine_strtol: (a: number, b: number, c: number) => bigint;
  readonly _spAtlasPage_createTexture: (a: number, b: number) => void;
  readonly spAtlas_createFromFile: (a: number, b: number) => number;
  readonly _spUtil_readFile: (a: number, b: number) => number;
  readonly spAtlas_dispose: (a: number) => void;
  readonly spAtlas_findRegion: (a: number, b: number) => number;
  readonly spSequence_getPath: (a: number, b: number, c: number, d: number) => void;
  readonly _spAtlasAttachmentLoader_createAttachment: (a: number, b: number, c: number, d: number, e: number, f: number) => number;
  readonly _spAttachmentLoader_setError: (a: number, b: number, c: number) => void;
  readonly _spBoundingBoxAttachment_dispose: (a: number) => void;
  readonly _spClippingAttachment_copy: (a: number) => number;
  readonly _spAttachment_init: (a: number, b: number, c: number, d: number, e: number) => void;
  readonly _spPointAttachment_dispose: (a: number) => void;
  readonly _spPointAttachment_copy: (a: number) => number;
  readonly _spPathAttachment_dispose: (a: number) => void;
  readonly _spPathAttachment_copy: (a: number) => number;
  readonly _spBoundingBoxAttachment_copy: (a: number) => number;
  readonly _spMeshAttachment_dispose: (a: number) => void;
  readonly _spMeshAttachment_copy: (a: number) => number;
  readonly _spRegionAttachment_dispose: (a: number) => void;
  readonly _spRegionAttachment_copy: (a: number) => number;
  readonly spAtlasAttachmentLoader_create: (a: number) => number;
  readonly _spAttachmentLoader_deinit: (a: number) => void;
  readonly _spAttachment_deinit: (a: number) => void;
  readonly spAttachment_copy: (a: number) => number;
  readonly spAttachment_dispose: (a: number) => void;
  readonly _spAttachmentLoader_init: (a: number, b: number, c: number, d: number, e: number) => void;
  readonly spAttachmentLoader_dispose: (a: number) => void;
  readonly spAttachmentLoader_createAttachment: (a: number, b: number, c: number, d: number, e: number, f: number) => number;
  readonly spAttachmentLoader_configureAttachment: (a: number, b: number) => void;
  readonly spAttachmentLoader_disposeAttachment: (a: number, b: number) => void;
  readonly _spAttachmentLoader_setUnknownTypeError: (a: number, b: number) => void;
  readonly spBone_setYDown: (a: number) => void;
  readonly spBone_isYDown: () => number;
  readonly spBone_create: (a: number, b: number, c: number) => number;
  readonly spBone_dispose: (a: number) => void;
  readonly spBone_update: (a: number) => void;
  readonly spBone_updateWorldTransformWith: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => void;
  readonly spBone_updateWorldTransform: (a: number) => void;
  readonly spBone_setToSetupPose: (a: number) => void;
  readonly spBone_getWorldRotationX: (a: number) => number;
  readonly spBone_getWorldRotationY: (a: number) => number;
  readonly spBone_getWorldScaleX: (a: number) => number;
  readonly spBone_getWorldScaleY: (a: number) => number;
  readonly spBone_updateAppliedTransform: (a: number) => void;
  readonly spBone_worldToLocal: (a: number, b: number, c: number, d: number, e: number) => void;
  readonly spBone_worldToParent: (a: number, b: number, c: number, d: number, e: number) => void;
  readonly spBone_localToWorld: (a: number, b: number, c: number, d: number, e: number) => void;
  readonly spBone_parentToWorld: (a: number, b: number, c: number, d: number, e: number) => void;
  readonly spBone_worldToLocalRotation: (a: number, b: number) => number;
  readonly spBone_localToWorldRotation: (a: number, b: number) => number;
  readonly spBone_rotateWorld: (a: number, b: number) => void;
  readonly spBoneData_create: (a: number, b: number, c: number) => number;
  readonly spBoneData_dispose: (a: number) => void;
  readonly _spVertexAttachment_deinit: (a: number) => void;
  readonly spVertexAttachment_copyTo: (a: number, b: number) => void;
  readonly spBoundingBoxAttachment_create: (a: number) => number;
  readonly spClippingAttachment_create: (a: number) => number;
  readonly spColor_create: () => number;
  readonly spColor_dispose: (a: number) => void;
  readonly spColor_setFromFloats: (a: number, b: number, c: number, d: number, e: number) => void;
  readonly spColor_setFromFloats3: (a: number, b: number, c: number, d: number) => void;
  readonly spColor_setFromColor: (a: number, b: number) => void;
  readonly spColor_setFromColor3: (a: number, b: number) => void;
  readonly spColor_addColor: (a: number, b: number) => void;
  readonly spColor_addFloats: (a: number, b: number, c: number, d: number, e: number) => void;
  readonly spColor_addFloats3: (a: number, b: number, c: number, d: number) => void;
  readonly spColor_clamp: (a: number) => void;
  readonly spDebug_printSkeletonData: (a: number) => void;
  readonly spDebug_printBoneData: (a: number) => void;
  readonly spDebug_printAnimation: (a: number) => void;
  readonly _spDebug_printTimelineBase: (a: number) => void;
  readonly spDebug_printFloats: (a: number, b: number) => void;
  readonly _spDebug_printCurveTimeline: (a: number) => void;
  readonly spDebug_printTimeline: (a: number) => void;
  readonly spDebug_printBoneDatas: (a: number, b: number) => void;
  readonly spDebug_printSkeleton: (a: number) => void;
  readonly spDebug_printBone: (a: number) => void;
  readonly spDebug_printBones: (a: number, b: number) => void;
  readonly spEvent_create: (a: number, b: number) => number;
  readonly spEventData_create: (a: number) => number;
  readonly spEventData_dispose: (a: number) => void;
  readonly spIkConstraint_create: (a: number, b: number) => number;
  readonly spIkConstraint_update: (a: number) => void;
  readonly spIkConstraint_apply1: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => void;
  readonly spIkConstraint_apply2: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
  readonly spIkConstraint_setToSetupPose: (a: number) => void;
  readonly spIkConstraintData_create: (a: number) => number;
  readonly spIkConstraintData_dispose: (a: number) => void;
  readonly Json_getError: () => number;
  readonly Json_dispose: (a: number) => void;
  readonly Json_create: (a: number) => number;
  readonly Json_getItem: (a: number, b: number) => number;
  readonly Json_getItemAtIndex: (a: number, b: number) => number;
  readonly Json_getString: (a: number, b: number, c: number) => number;
  readonly Json_getFloat: (a: number, b: number, c: number) => number;
  readonly Json_getInt: (a: number, b: number, c: number) => number;
  readonly spMeshAttachment_newLinkedMesh: (a: number) => number;
  readonly spSequence_create: (a: number) => number;
  readonly spMeshAttachment_updateRegion: (a: number) => void;
  readonly spMeshAttachment_create: (a: number) => number;
  readonly spMeshAttachment_setParentMesh: (a: number, b: number) => void;
  readonly spPathAttachment_create: (a: number) => number;
  readonly spPathConstraint_create: (a: number, b: number) => number;
  readonly spPathConstraint_dispose: (a: number) => void;
  readonly spPathConstraint_update: (a: number) => void;
  readonly spPathConstraint_computeWorldPositions: (a: number, b: number, c: number, d: number) => number;
  readonly spPathConstraint_setToSetupPose: (a: number) => void;
  readonly spVertexAttachment_computeWorldVertices: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => void;
  readonly spPathConstraintData_create: (a: number) => number;
  readonly spPhysicsConstraint_create: (a: number, b: number) => number;
  readonly spPhysicsConstraint_reset: (a: number) => void;
  readonly spPhysicsConstraint_setToSetupPose: (a: number) => void;
  readonly spPhysicsConstraint_update: (a: number, b: number) => void;
  readonly spPhysicsConstraint_rotate: (a: number, b: number, c: number, d: number) => void;
  readonly spPhysicsConstraint_translate: (a: number, b: number, c: number) => void;
  readonly spPhysicsConstraintData_create: (a: number) => number;
  readonly spPhysicsConstraintData_dispose: (a: number) => void;
  readonly spPointAttachment_create: (a: number) => number;
  readonly spPointAttachment_computeWorldPosition: (a: number, b: number, c: number, d: number) => void;
  readonly spPointAttachment_computeWorldRotation: (a: number, b: number) => number;
  readonly spRegionAttachment_create: (a: number) => number;
  readonly spRegionAttachment_updateRegion: (a: number) => void;
  readonly spRegionAttachment_computeWorldVertices: (a: number, b: number, c: number, d: number, e: number) => void;
  readonly spTextureRegionArray_create: (a: number) => number;
  readonly spSequence_copy: (a: number) => number;
  readonly spSequence_apply: (a: number, b: number, c: number) => void;
  readonly spSkeleton_create: (a: number) => number;
  readonly spSlot_create: (a: number, b: number) => number;
  readonly spTransformConstraint_create: (a: number, b: number) => number;
  readonly spSkeleton_updateCache: (a: number) => void;
  readonly spSkeleton_dispose: (a: number) => void;
  readonly spSkeleton_updateWorldTransform: (a: number, b: number) => void;
  readonly _spTransformConstraint_applyAbsoluteWorld: (a: number) => void;
  readonly _spTransformConstraint_applyRelativeWorld: (a: number) => void;
  readonly _spTransformConstraint_applyRelativeLocal: (a: number) => void;
  readonly _spTransformConstraint_applyAbsoluteLocal: (a: number) => void;
  readonly spSkeleton_update: (a: number, b: number) => void;
  readonly spSkeleton_updateWorldTransformWith: (a: number, b: number, c: number) => void;
  readonly spSkeleton_setToSetupPose: (a: number) => void;
  readonly spSkeleton_setBonesToSetupPose: (a: number) => void;
  readonly spSkeleton_setSlotsToSetupPose: (a: number) => void;
  readonly spSkeleton_findBone: (a: number, b: number) => number;
  readonly spSkeleton_findSlot: (a: number, b: number) => number;
  readonly spSkeleton_setSkinByName: (a: number, b: number) => number;
  readonly spSkeleton_setSkin: (a: number, b: number) => void;
  readonly spSkeleton_getAttachmentForSlotName: (a: number, b: number, c: number) => number;
  readonly spSkeleton_getAttachmentForSlotIndex: (a: number, b: number, c: number) => number;
  readonly spSkeleton_setAttachment: (a: number, b: number, c: number) => number;
  readonly spSkeleton_findIkConstraint: (a: number, b: number) => number;
  readonly spSkeleton_findTransformConstraint: (a: number, b: number) => number;
  readonly spSkeleton_findPathConstraint: (a: number, b: number) => number;
  readonly spSkeleton_findPhysicsConstraint: (a: number, b: number) => number;
  readonly spSkeleton_physicsTranslate: (a: number, b: number, c: number) => void;
  readonly spSkeleton_physicsRotate: (a: number, b: number, c: number, d: number) => void;
  readonly spSkeletonBinary_createWithLoader: (a: number) => number;
  readonly spSkeletonBinary_create: (a: number) => number;
  readonly spSkeletonBinary_dispose: (a: number) => void;
  readonly _spSkeletonBinary_setError: (a: number, b: number, c: number) => void;
  readonly readFloat: (a: number) => number;
  readonly readString: (a: number) => number;
  readonly spine_malloc: (a: bigint) => number;
  readonly spSkeletonBinary_readAttachment: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => number;
  readonly spSkeletonBinary_readSkin: (a: number, b: number, c: number, d: number, e: number) => number;
  readonly spSkin_create: (a: number) => number;
  readonly spSkin_setAttachment: (a: number, b: number, c: number, d: number) => void;
  readonly spSkeletonBinary_readSkeletonDataFile: (a: number, b: number) => number;
  readonly spSkeletonBinary_readSkeletonData: (a: number, b: number, c: number) => number;
  readonly spSlotData_create: (a: number, b: number, c: number) => number;
  readonly spTransformConstraintData_create: (a: number) => number;
  readonly spSkeletonData_dispose: (a: number) => void;
  readonly spPolygon_create: (a: number) => number;
  readonly spPolygon_containsPoint: (a: number, b: number, c: number) => number;
  readonly spPolygon_intersectsSegment: (a: number, b: number, c: number, d: number, e: number) => number;
  readonly spSkeletonBounds_create: () => number;
  readonly spSkeletonBounds_dispose: (a: number) => void;
  readonly spSkeletonBounds_update: (a: number, b: number, c: number) => void;
  readonly spSkeletonBounds_aabbContainsPoint: (a: number, b: number, c: number) => number;
  readonly spSkeletonBounds_aabbIntersectsSegment: (a: number, b: number, c: number, d: number, e: number) => number;
  readonly spSkeletonBounds_aabbIntersectsSkeleton: (a: number, b: number) => number;
  readonly spSkeletonBounds_containsPoint: (a: number, b: number, c: number) => number;
  readonly spSkeletonBounds_intersectsSegment: (a: number, b: number, c: number, d: number, e: number) => number;
  readonly spSkeletonBounds_getPolygon: (a: number, b: number) => number;
  readonly spSkeletonClipping_create: () => number;
  readonly spTriangulator_create: () => number;
  readonly spSkeletonClipping_dispose: (a: number) => void;
  readonly spTriangulator_dispose: (a: number) => void;
  readonly spSkeletonClipping_clipStart: (a: number, b: number, c: number) => number;
  readonly spTriangulator_triangulate: (a: number, b: number) => number;
  readonly spTriangulator_decompose: (a: number, b: number, c: number) => number;
  readonly spSkeletonClipping_clipEnd: (a: number, b: number) => void;
  readonly spSkeletonClipping_clipEnd2: (a: number) => void;
  readonly spSkeletonClipping_isClipping: (a: number) => number;
  readonly _clip: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => number;
  readonly spSkeletonClipping_clipTriangles: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => void;
  readonly spSkeletonData_create: () => number;
  readonly spSlotData_dispose: (a: number) => void;
  readonly spSkin_dispose: (a: number) => void;
  readonly spSkeletonData_findBone: (a: number, b: number) => number;
  readonly spSkeletonData_findSlot: (a: number, b: number) => number;
  readonly spSkeletonData_findSkin: (a: number, b: number) => number;
  readonly spSkeletonData_findEvent: (a: number, b: number) => number;
  readonly spSkeletonData_findAnimation: (a: number, b: number) => number;
  readonly spSkeletonData_findIkConstraint: (a: number, b: number) => number;
  readonly spSkeletonData_findTransformConstraint: (a: number, b: number) => number;
  readonly spSkeletonData_findPathConstraint: (a: number, b: number) => number;
  readonly spSkeletonData_findPhysicsConstraint: (a: number, b: number) => number;
  readonly spSkeletonJson_createWithLoader: (a: number) => number;
  readonly spSkeletonJson_create: (a: number) => number;
  readonly _spSkeletonJson_setError: (a: number, b: number, c: number, d: number) => void;
  readonly findIkConstraintIndex: (a: number, b: number, c: number, d: number) => number;
  readonly findTransformConstraintIndex: (a: number, b: number, c: number, d: number) => number;
  readonly findPathConstraintIndex: (a: number, b: number, c: number, d: number) => number;
  readonly findPhysicsConstraintIndex: (a: number, b: number, c: number, d: number) => number;
  readonly spSkeletonJson_readSkeletonDataFile: (a: number, b: number) => number;
  readonly spSkeletonJson_readSkeletonData: (a: number, b: number) => number;
  readonly spine_strtoul: (a: number, b: number, c: number) => bigint;
  readonly _spMalloc: (a: bigint, b: number, c: number) => number;
  readonly spBoneDataArray_create: (a: number) => number;
  readonly spIkConstraintDataArray_create: (a: number) => number;
  readonly spTransformConstraintDataArray_create: (a: number) => number;
  readonly spPathConstraintDataArray_create: (a: number) => number;
  readonly spPhysicsConstraintDataArray_create: (a: number) => number;
  readonly _Entry_create: (a: number, b: number, c: number) => number;
  readonly _Entry_dispose: (a: number) => void;
  readonly spSkin_getAttachment: (a: number, b: number, c: number) => number;
  readonly spSkin_getAttachmentName: (a: number, b: number, c: number) => number;
  readonly spSkin_attachAll: (a: number, b: number, c: number) => void;
  readonly spSkin_addSkin: (a: number, b: number) => void;
  readonly spSkin_copySkin: (a: number, b: number) => void;
  readonly spSkin_getAttachments: (a: number) => number;
  readonly spSkin_clear: (a: number) => void;
  readonly spSlot_dispose: (a: number) => void;
  readonly spSlot_setAttachment: (a: number, b: number) => void;
  readonly spSlot_setToSetupPose: (a: number) => void;
  readonly spSlotData_setAttachmentName: (a: number, b: number) => void;
  readonly spTransformConstraint_update: (a: number) => void;
  readonly spTransformConstraint_setToSetupPose: (a: number) => void;
  readonly _spVertexAttachment_init: (a: number) => void;
  readonly _spInternalRandom: () => number;
  readonly spine_rand: () => number;
  readonly _spCalloc: (a: bigint, b: bigint, c: number, d: number) => number;
  readonly _spRealloc: (a: number, b: bigint) => number;
  readonly _spRandom: () => number;
  readonly _spSetDebugMalloc: (a: number) => void;
  readonly _spSetMalloc: (a: number) => void;
  readonly _spSetRealloc: (a: number) => void;
  readonly _spSetFree: (a: number) => void;
  readonly _spSetRandom: (a: number) => void;
  readonly _spReadFile: (a: number, b: number) => number;
  readonly spine_fopen: (a: number, b: number) => number;
  readonly _spMath_random: (a: number, b: number) => number;
  readonly _spMath_randomTriangular: (a: number, b: number) => number;
  readonly _spMath_randomTriangularWith: (a: number, b: number, c: number) => number;
  readonly _spMath_interpolate: (a: number, b: number, c: number, d: number) => number;
  readonly _spMath_pow2_apply: (a: number) => number;
  readonly _spMath_pow2out_apply: (a: number) => number;
  readonly spine_realloc: (a: number, b: bigint) => number;
  readonly spine_free: (a: number) => void;
  readonly spTrackEntryArray_removeAt: (a: number, b: number) => void;
  readonly spTimelineArray_removeAt: (a: number, b: number) => void;
  readonly spUnsignedShortArray_removeAt: (a: number, b: number) => void;
  readonly spIntArray_removeAt: (a: number, b: number) => void;
  readonly spArrayShortArray_removeAt: (a: number, b: number) => void;
  readonly spTextureRegionArray_removeAt: (a: number, b: number) => void;
  readonly spBoneDataArray_removeAt: (a: number, b: number) => void;
  readonly spIkConstraintDataArray_removeAt: (a: number, b: number) => void;
  readonly spTransformConstraintDataArray_removeAt: (a: number, b: number) => void;
  readonly spPathConstraintDataArray_removeAt: (a: number, b: number) => void;
  readonly spPhysicsConstraintDataArray_removeAt: (a: number, b: number) => void;
  readonly spTrackEntryArray_setSize: (a: number, b: number) => number;
  readonly spTimelineArray_setSize: (a: number, b: number) => number;
  readonly spIntArray_setSize: (a: number, b: number) => number;
  readonly spFloatArray_setSize: (a: number, b: number) => number;
  readonly spArrayShortArray_setSize: (a: number, b: number) => number;
  readonly spTextureRegionArray_setSize: (a: number, b: number) => number;
  readonly spBoneDataArray_setSize: (a: number, b: number) => number;
  readonly spIkConstraintDataArray_setSize: (a: number, b: number) => number;
  readonly spTransformConstraintDataArray_setSize: (a: number, b: number) => number;
  readonly spPathConstraintDataArray_setSize: (a: number, b: number) => number;
  readonly spPhysicsConstraintDataArray_setSize: (a: number, b: number) => number;
  readonly spPathConstraintData_dispose: (a: number) => void;
  readonly spTransformConstraintData_dispose: (a: number) => void;
  readonly spTrackEntryArray_addAll: (a: number, b: number) => void;
  readonly spTimelineArray_addAll: (a: number, b: number) => void;
  readonly spIntArray_addAll: (a: number, b: number) => void;
  readonly spArrayShortArray_addAll: (a: number, b: number) => void;
  readonly spTextureRegionArray_addAll: (a: number, b: number) => void;
  readonly spBoneDataArray_addAll: (a: number, b: number) => void;
  readonly spIkConstraintDataArray_addAll: (a: number, b: number) => void;
  readonly spTransformConstraintDataArray_addAll: (a: number, b: number) => void;
  readonly spPathConstraintDataArray_addAll: (a: number, b: number) => void;
  readonly spPhysicsConstraintDataArray_addAll: (a: number, b: number) => void;
  readonly spTrackEntryArray_contains: (a: number, b: number) => number;
  readonly spTimelineArray_contains: (a: number, b: number) => number;
  readonly spArrayShortArray_contains: (a: number, b: number) => number;
  readonly spTextureRegionArray_contains: (a: number, b: number) => number;
  readonly spBoneDataArray_contains: (a: number, b: number) => number;
  readonly spIkConstraintDataArray_contains: (a: number, b: number) => number;
  readonly spTransformConstraintDataArray_contains: (a: number, b: number) => number;
  readonly spPathConstraintDataArray_contains: (a: number, b: number) => number;
  readonly spPhysicsConstraintDataArray_contains: (a: number, b: number) => number;
  readonly spUnsignedShortArray_addAll: (a: number, b: number) => void;
  readonly spRotateTimeline_setFrame: (a: number, b: number, c: number, d: number) => void;
  readonly spTranslateXTimeline_setFrame: (a: number, b: number, c: number, d: number) => void;
  readonly spTranslateYTimeline_setFrame: (a: number, b: number, c: number, d: number) => void;
  readonly spScaleXTimeline_setFrame: (a: number, b: number, c: number, d: number) => void;
  readonly spScaleYTimeline_setFrame: (a: number, b: number, c: number, d: number) => void;
  readonly spShearXTimeline_setFrame: (a: number, b: number, c: number, d: number) => void;
  readonly spShearYTimeline_setFrame: (a: number, b: number, c: number, d: number) => void;
  readonly spCurveTimeline1_setFrame: (a: number, b: number, c: number, d: number) => void;
  readonly spPathConstraintPositionTimeline_setFrame: (a: number, b: number, c: number, d: number) => void;
  readonly spPathConstraintSpacingTimeline_setFrame: (a: number, b: number, c: number, d: number) => void;
  readonly spPhysicsConstraintTimeline_setFrame: (a: number, b: number, c: number, d: number) => void;
  readonly spTimelineArray_clear: (a: number) => void;
  readonly spTrackEntryArray_clear: (a: number) => void;
  readonly spPropertyIdArray_clear: (a: number) => void;
  readonly spIntArray_clear: (a: number) => void;
  readonly spShortArray_clear: (a: number) => void;
  readonly spUnsignedShortArray_clear: (a: number) => void;
  readonly spFloatArray_clear: (a: number) => void;
  readonly spArrayShortArray_clear: (a: number) => void;
  readonly spKeyValueArray_clear: (a: number) => void;
  readonly spTextureRegionArray_clear: (a: number) => void;
  readonly spBoneDataArray_clear: (a: number) => void;
  readonly spIkConstraintDataArray_clear: (a: number) => void;
  readonly spTransformConstraintDataArray_clear: (a: number) => void;
  readonly spPathConstraintDataArray_clear: (a: number) => void;
  readonly spPhysicsConstraintDataArray_clear: (a: number) => void;
  readonly spTimelineArray_dispose: (a: number) => void;
  readonly spTrackEntryArray_dispose: (a: number) => void;
  readonly spPropertyIdArray_dispose: (a: number) => void;
  readonly spIntArray_dispose: (a: number) => void;
  readonly spShortArray_dispose: (a: number) => void;
  readonly spUnsignedShortArray_dispose: (a: number) => void;
  readonly spFloatArray_dispose: (a: number) => void;
  readonly spArrayShortArray_dispose: (a: number) => void;
  readonly spKeyValueArray_dispose: (a: number) => void;
  readonly spEvent_dispose: (a: number) => void;
  readonly spIkConstraint_dispose: (a: number) => void;
  readonly spTextureRegionArray_dispose: (a: number) => void;
  readonly spSequence_dispose: (a: number) => void;
  readonly spBoneDataArray_dispose: (a: number) => void;
  readonly spIkConstraintDataArray_dispose: (a: number) => void;
  readonly spTransformConstraintDataArray_dispose: (a: number) => void;
  readonly spPathConstraintDataArray_dispose: (a: number) => void;
  readonly spPhysicsConstraintDataArray_dispose: (a: number) => void;
  readonly spTransformConstraint_dispose: (a: number) => void;
  readonly spTrackEntryArray_peek: (a: number) => number;
  readonly spTimelineArray_peek: (a: number) => number;
  readonly spIntArray_peek: (a: number) => number;
  readonly spArrayShortArray_peek: (a: number) => number;
  readonly spTextureRegionArray_peek: (a: number) => number;
  readonly spBoneDataArray_peek: (a: number) => number;
  readonly spIkConstraintDataArray_peek: (a: number) => number;
  readonly spTransformConstraintDataArray_peek: (a: number) => number;
  readonly spPathConstraintDataArray_peek: (a: number) => number;
  readonly spPhysicsConstraintDataArray_peek: (a: number) => number;
  readonly spTranslateTimeline_setFrame: (a: number, b: number, c: number, d: number, e: number) => void;
  readonly spScaleTimeline_setFrame: (a: number, b: number, c: number, d: number, e: number) => void;
  readonly spShearTimeline_setFrame: (a: number, b: number, c: number, d: number, e: number) => void;
  readonly spUnsignedShortArray_addAllValues: (a: number, b: number, c: number, d: number) => void;
  readonly _spClippingAttachment_dispose: (a: number) => void;
  readonly _spEventQueue_addType: (a: number, b: number) => void;
  readonly _spEventQueue_addEvent: (a: number, b: number) => void;
  readonly _ToEntry_dispose: (a: number) => void;
  readonly spPhysicsConstraint_dispose: (a: number) => void;
  readonly _spFree: (a: number) => void;
  readonly spTrackEntryArray_ensureCapacity: (a: number, b: number) => void;
  readonly spTimelineArray_ensureCapacity: (a: number, b: number) => void;
  readonly spIntArray_ensureCapacity: (a: number, b: number) => void;
  readonly spUnsignedShortArray_ensureCapacity: (a: number, b: number) => void;
  readonly spFloatArray_ensureCapacity: (a: number, b: number) => void;
  readonly spArrayShortArray_ensureCapacity: (a: number, b: number) => void;
  readonly spTextureRegionArray_ensureCapacity: (a: number, b: number) => void;
  readonly spBoneDataArray_ensureCapacity: (a: number, b: number) => void;
  readonly spIkConstraintDataArray_ensureCapacity: (a: number, b: number) => void;
  readonly spTransformConstraintDataArray_ensureCapacity: (a: number, b: number) => void;
  readonly spPathConstraintDataArray_ensureCapacity: (a: number, b: number) => void;
  readonly spPhysicsConstraintDataArray_ensureCapacity: (a: number, b: number) => void;
  readonly spRGBTimeline_setFrame: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
  readonly spSkeletonJson_dispose: (a: number) => void;
  readonly _spSequenceTimeline_dispose: (a: number) => void;
  readonly _spPhysicsConstraintResetTimeline_dispose: (a: number) => void;
  readonly spTrackEntryArray_pop: (a: number) => number;
  readonly spTimelineArray_pop: (a: number) => number;
  readonly spIntArray_pop: (a: number) => number;
  readonly spArrayShortArray_pop: (a: number) => number;
  readonly spTextureRegionArray_pop: (a: number) => number;
  readonly spBoneDataArray_pop: (a: number) => number;
  readonly spIkConstraintDataArray_pop: (a: number) => number;
  readonly spTransformConstraintDataArray_pop: (a: number) => number;
  readonly spPathConstraintDataArray_pop: (a: number) => number;
  readonly spPhysicsConstraintDataArray_pop: (a: number) => number;
  readonly spUnsignedShortArray_setSize: (a: number, b: number) => number;
  readonly spPolygon_dispose: (a: number) => void;
  readonly spTrackEntryArray_addAllValues: (a: number, b: number, c: number, d: number) => void;
  readonly spTimelineArray_addAllValues: (a: number, b: number, c: number, d: number) => void;
  readonly spIntArray_addAllValues: (a: number, b: number, c: number, d: number) => void;
  readonly spArrayShortArray_addAllValues: (a: number, b: number, c: number, d: number) => void;
  readonly spTextureRegionArray_addAllValues: (a: number, b: number, c: number, d: number) => void;
  readonly spBoneDataArray_addAllValues: (a: number, b: number, c: number, d: number) => void;
  readonly spIkConstraintDataArray_addAllValues: (a: number, b: number, c: number, d: number) => void;
  readonly spTransformConstraintDataArray_addAllValues: (a: number, b: number, c: number, d: number) => void;
  readonly spPathConstraintDataArray_addAllValues: (a: number, b: number, c: number, d: number) => void;
  readonly spPhysicsConstraintDataArray_addAllValues: (a: number, b: number, c: number, d: number) => void;
  readonly spTrackEntryArray_add: (a: number, b: number) => void;
  readonly spTimelineArray_add: (a: number, b: number) => void;
  readonly spIntArray_add: (a: number, b: number) => void;
  readonly spArrayShortArray_add: (a: number, b: number) => void;
  readonly spTextureRegionArray_add: (a: number, b: number) => void;
  readonly spBoneDataArray_add: (a: number, b: number) => void;
  readonly spIkConstraintDataArray_add: (a: number, b: number) => void;
  readonly spTransformConstraintDataArray_add: (a: number, b: number) => void;
  readonly spPathConstraintDataArray_add: (a: number, b: number) => void;
  readonly spPhysicsConstraintDataArray_add: (a: number, b: number) => void;
  readonly spine_isspace: (a: number) => number;
  readonly spine_isdigit: (a: number) => number;
  readonly spine_isalpha: (a: number) => number;
  readonly spine_isupper: (a: number) => number;
  readonly spine_strlen: (a: number) => bigint;
  readonly spine_strcmp: (a: number, b: number) => number;
  readonly spine_strncmp: (a: number, b: number, c: bigint) => number;
  readonly spine_strcasecmp: (a: number, b: number) => number;
  readonly spine_strcpy: (a: number, b: number) => number;
  readonly spine_strncpy: (a: number, b: number, c: bigint) => number;
  readonly spine_strncat: (a: number, b: number, c: bigint) => number;
  readonly spine_strrchr: (a: number, b: number) => number;
  readonly spine_sqrtf: (a: number) => number;
  readonly spine_ceil: (a: number) => number;
  readonly spine_acosf: (a: number) => number;
  readonly spine_atan2f: (a: number, b: number) => number;
  readonly spine_cosf: (a: number) => number;
  readonly spine_sinf: (a: number) => number;
  readonly spine_pow: (a: number, b: number) => number;
  readonly spine_fmodf: (a: number, b: number) => number;
  readonly spine_memset: (a: number, b: number, c: bigint) => number;
  readonly spine_fclose: (a: number) => number;
  readonly spine_fread: (a: number, b: bigint, c: bigint, d: number) => bigint;
  readonly spine_fseek: (a: number, b: bigint, c: number) => number;
  readonly spine_ftell: (a: number) => bigint;
  readonly wgpu_render_bundle_set_pipeline: (a: number, b: bigint) => void;
  readonly wgpu_render_bundle_set_bind_group: (a: number, b: number, c: bigint, d: number, e: number) => void;
  readonly wgpu_render_bundle_set_vertex_buffer: (a: number, b: number, c: bigint, d: bigint, e: bigint) => void;
  readonly wgpu_render_bundle_set_push_constants: (a: number, b: number, c: number, d: number, e: number) => void;
  readonly wgpu_render_bundle_draw: (a: number, b: number, c: number, d: number, e: number) => void;
  readonly wgpu_render_bundle_draw_indexed: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
  readonly wgpu_render_bundle_draw_indirect: (a: number, b: bigint, c: bigint) => void;
  readonly wgpu_render_bundle_draw_indexed_indirect: (a: number, b: bigint, c: bigint) => void;
  readonly wgpu_render_bundle_set_index_buffer: (a: number, b: bigint, c: number, d: bigint, e: bigint) => void;
  readonly wgpu_render_bundle_pop_debug_group: (a: number) => void;
  readonly wgpu_render_bundle_insert_debug_marker: (a: number, b: number) => void;
  readonly wgpu_render_bundle_push_debug_group: (a: number, b: number) => void;
  readonly __externref_table_alloc: () => number;
  readonly __wbindgen_export_1: WebAssembly.Table;
  readonly __wbindgen_exn_store: (a: number) => void;
  readonly __wbindgen_malloc: (a: number, b: number) => number;
  readonly __wbindgen_realloc: (a: number, b: number, c: number, d: number) => number;
  readonly __wbindgen_free: (a: number, b: number, c: number) => void;
  readonly __wbindgen_export_6: WebAssembly.Table;
  readonly closure5285_externref_shim: (a: number, b: number, c: any) => void;
  readonly _dyn_core__ops__function__FnMut_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__he8ce8b15c97ef2ce: (a: number, b: number) => void;
  readonly closure5288_externref_shim: (a: number, b: number, c: any, d: any) => void;
  readonly _dyn_core__ops__function__FnMut_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h62f46c540c7ba2d5: (a: number, b: number) => void;
  readonly closure74830_externref_shim: (a: number, b: number, c: any) => void;
  readonly __wbindgen_start: () => void;
}

export type SyncInitInput = BufferSource | WebAssembly.Module;
/**
* Instantiates the given `module`, which can either be bytes or
* a precompiled `WebAssembly.Module`.
*
* @param {{ module: SyncInitInput }} module - Passing `SyncInitInput` directly is deprecated.
*
* @returns {InitOutput}
*/
export function initSync(module: { module: SyncInitInput } | SyncInitInput): InitOutput;

/**
* If `module_or_path` is {RequestInfo} or {URL}, makes a request and
* for everything else, calls `WebAssembly.instantiate` directly.
*
* @param {{ module_or_path: InitInput | Promise<InitInput> }} module_or_path - Passing `InitInput` directly is deprecated.
*
* @returns {Promise<InitOutput>}
*/
export default function __wbg_init (module_or_path?: { module_or_path: InitInput | Promise<InitInput> } | InitInput | Promise<InitInput>): Promise<InitOutput>;
